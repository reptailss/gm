import { GmFileWriteMode, GmModuleClassVar, GmModuleConstructorProp, GmModuleDirType } from "../types";
import { GmAbstractModule } from "./GmAbstractModule";
import { IGmModuleClass, IGmModuleClassMethod, IGmModuleConstant, IGmModuleFn, IGmModuleType } from "../interfaces/gmModule";
import { IGmModuleClassDecorator } from "../../decorators/interfaces/gmModuleClassDecorator";
import { IGmServiceFn } from "../../services/inetfaces/gmServiceFn";
import { IGmServiceClass } from "../../services/inetfaces/gmServiceClass";
import { GmExport } from "../../export/types";
export declare abstract class GmAbstractModuleClass extends GmAbstractModule implements IGmModuleClass {
    moduleType: "class";
    private constructorProps;
    private methods;
    private decorators;
    private vars;
    private elementsBeforeClass;
    private fileWriteModeGm;
    private dirType;
    abstract getDirName(): string | null;
    abstract getFileName(): string;
    getTemplatePath(): string;
    addConstructorProp(constructorProp: GmModuleConstructorProp): this;
    getConstructorProps(): GmModuleConstructorProp[];
    addMethod(method: IGmModuleClassMethod): this;
    getMethods(): IGmModuleClassMethod[];
    getMethodByIndex(index: number): IGmModuleClassMethod;
    addDecorator(decorator: IGmModuleClassDecorator): this;
    getDecorators(): IGmModuleClassDecorator[];
    addService(service: IGmServiceFn | IGmServiceClass): this;
    getExport(): GmExport;
    getFileWriteMode(): GmFileWriteMode;
    setDirType(dirType: GmModuleDirType): this;
    getDirType(): GmModuleDirType;
    setFileWriteMode(mode: GmFileWriteMode): this;
    getFilePath(): string;
    addChildModule(module: IGmModuleFn | IGmModuleConstant | IGmModuleType | IGmModuleClass): this;
    addVar(gmVar: GmModuleClassVar): this;
    getVars(): GmModuleClassVar[];
    addElementBeforeClass(value: string): this;
    getElementsBeforeClass(): string[];
}
